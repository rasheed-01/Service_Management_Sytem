/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.assignment;

import java.awt.HeadlessException;
import java.io.BufferedReader;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rashi
 */
public class TechnicianInterface2 extends javax.swing.JFrame implements LogOut{

    /**
     * Creates new form TechnicianInterface2
     */
    public TechnicianInterface2() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Update_Status = new javax.swing.JDialog();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        User_IC_Display = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        User_update = new javax.swing.JTable()
        {public boolean isCellEditable(int row, int column){return false;}};
        Confirm_Modify_Button = new javax.swing.JButton();
        Show_Users_Button = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        View_Tech_Appointments = new javax.swing.JDialog();
        jScrollPane4 = new javax.swing.JScrollPane();
        Tech_appointment1 = new javax.swing.JTable()
        {public boolean isCellEditable(int row, int column){return false;}};
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();

        Update_Status.setLocation(new java.awt.Point(0, 0));
        Update_Status.setMinimumSize(new java.awt.Dimension(963, 504));
        Update_Status.setResizable(false);
        Update_Status.setSize(new java.awt.Dimension(500, 500));

        jLabel4.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        jLabel4.setText("User's Unique Booking Reference No. :");

        User_IC_Display.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                User_IC_DisplayActionPerformed(evt);
            }
        });

        User_update.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TP Number", "Name", "Unique Reference No.", "Contact Number", "Appliance", "Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        User_update.setFocusable(false);
        User_update.setShowGrid(true);
        User_update.getTableHeader().setReorderingAllowed(false);
        User_update.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                User_updateMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(User_update);

        Confirm_Modify_Button.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        Confirm_Modify_Button.setText("Update Completed");
        Confirm_Modify_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Confirm_Modify_ButtonActionPerformed(evt);
            }
        });

        Show_Users_Button.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        Show_Users_Button.setText("Refresh");
        Show_Users_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Show_Users_ButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        jLabel3.setText("Please Select the Required Row to make Changes");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 934, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 10, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(User_IC_Display)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Confirm_Modify_Button)
                .addGap(220, 220, 220))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Show_Users_Button)
                .addGap(28, 28, 28))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(User_IC_Display, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Confirm_Modify_Button))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Show_Users_Button)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout Update_StatusLayout = new javax.swing.GroupLayout(Update_Status.getContentPane());
        Update_Status.getContentPane().setLayout(Update_StatusLayout);
        Update_StatusLayout.setHorizontalGroup(
            Update_StatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Update_StatusLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Update_StatusLayout.setVerticalGroup(
            Update_StatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Update_StatusLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        View_Tech_Appointments.setMinimumSize(new java.awt.Dimension(939, 289));
        View_Tech_Appointments.setResizable(false);

        Tech_appointment1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "TP Number", "Name", "Unique Reference No.", "Contact Number", "Appliance", "Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tech_appointment1.setFocusable(false);
        Tech_appointment1.setShowGrid(true);
        Tech_appointment1.getTableHeader().setReorderingAllowed(false);
        Tech_appointment1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tech_appointment1MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(Tech_appointment1);

        javax.swing.GroupLayout View_Tech_AppointmentsLayout = new javax.swing.GroupLayout(View_Tech_Appointments.getContentPane());
        View_Tech_Appointments.getContentPane().setLayout(View_Tech_AppointmentsLayout);
        View_Tech_AppointmentsLayout.setHorizontalGroup(
            View_Tech_AppointmentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(View_Tech_AppointmentsLayout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 927, Short.MAX_VALUE)
                .addContainerGap())
        );
        View_Tech_AppointmentsLayout.setVerticalGroup(
            View_Tech_AppointmentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(View_Tech_AppointmentsLayout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 13, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        jButton1.setText("View Pending Appointments");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        jButton2.setText("Update Appointments");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel1.setText("Choose One of the Following Options");

        jButton4.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        jButton4.setText("View Completed Appointments");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        jButton5.setText("Log Out");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(102, 102, 255));

        jLabel2.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(240, 240, 240));
        jLabel2.setText("Technician Menu");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton1)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(52, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void Logout()
    {
        new MainInterface().setVisible(true);
        this.dispose();  
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        View_Tech_Appointments.setModal(false);       
        try
        {  
            
            Path Appointments = Paths.get(".", "Appointments.txt");   
            BufferedReader reader = Files.newBufferedReader(Appointments);         
            DefaultTableModel model1 = (DefaultTableModel) Tech_appointment1.getModel();  
            model1.setRowCount(0);
            String User_Details_Array; 
                      
            while ((User_Details_Array = reader.readLine()) != null) 
            {
                String[] fields = User_Details_Array.split("[,]"); 
                if (fields[6].equals("Pending")){
                model1.addRow(fields);}
            }         
        }
        catch (IOException ex){} 
        View_Tech_Appointments.setModal(true);
        View_Tech_Appointments.setLocationRelativeTo(null);
        View_Tech_Appointments.setVisible(true);               
           // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Update_Status.setModal(false);       
        try
        {  
            
            Path User_Details = Paths.get(".", "Appointments.txt");   
            BufferedReader reader = Files.newBufferedReader(User_Details);         
            DefaultTableModel model1 = (DefaultTableModel) User_update.getModel();  
            model1.setRowCount(0);
            String User_Details_Array; 
            User_IC_Display.setText(null);          
            while ((User_Details_Array = reader.readLine()) != null) 
            {
                String[] fields = User_Details_Array.split("[,]"); 
                if (fields[6].equals("Pending")){
                model1.addRow(fields);}
            }         
        }
        catch (IOException ex){} 
        Update_Status.setModal(true);
        Update_Status.setLocationRelativeTo(null);
        Update_Status.setVisible(true);                // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        View_Tech_Appointments.setModal(false);       
        try
        {  
            
            Path Appointments = Paths.get(".", "Appointments.txt");   
            BufferedReader reader = Files.newBufferedReader(Appointments);         
            DefaultTableModel model1 = (DefaultTableModel) Tech_appointment1.getModel();  
            model1.setRowCount(0);
            String User_Details_Array; 
                     
            while ((User_Details_Array = reader.readLine()) != null) 
            {
                String[] fields = User_Details_Array.split("[,]"); 
                if (fields[6].equals("Completed")){
                model1.addRow(fields);}
            }         
        }
        catch (IOException ex){} 
        View_Tech_Appointments.setModal(true);
        View_Tech_Appointments.setLocationRelativeTo(null);
        View_Tech_Appointments.setVisible(true);         // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        Logout();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void User_updateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_User_updateMouseClicked

        int selected_row_index = User_update.getSelectedRow();
        User_IC_Display.setText(User_update.getValueAt(selected_row_index,2).toString());
        
    }//GEN-LAST:event_User_updateMouseClicked

    private void Show_Users_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Show_Users_ButtonActionPerformed
        try
        {
            Path User_Details = Paths.get(".", "Appointments.txt");
            BufferedReader reader = Files.newBufferedReader(User_Details);
            DefaultTableModel model1 = (DefaultTableModel) User_update.getModel();
            model1.setRowCount(0);
            String User_Details_Array;
            User_IC_Display.setText(null);
            
            while ((User_Details_Array = reader.readLine()) != null)
            {
                String[] fields = User_Details_Array.split("[,]");
                model1.addRow(fields);
            }
        }
        catch (IOException ex){}
    }//GEN-LAST:event_Show_Users_ButtonActionPerformed

    private void Confirm_Modify_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Confirm_Modify_ButtonActionPerformed

        int found = 0;
        try
        {
            if( User_IC_Display.getText().equals("") )
            {
                found = 2;
                JOptionPane.showMessageDialog(rootPane, "Please select a row");
            }
            else
            {
                String unq = User_IC_Display.getText();
                Path Pending = Paths.get(".", "Appointments.txt");
                    
                try (BufferedReader reader = Files.newBufferedReader(Pending);)

                {   
                    String line;                      
                    while ((line = reader.readLine()) != null)
                    {
                        String[] fields = line.split("[,]");                              
                        if (unq.equals(fields[2]))
                        {
                            found = 1;
                            String tpno= fields[0];
                            String name= fields[1];
                            String id = fields[2];
                            String ct = fields[3];
                            String app = fields[4];
                            String date = fields[5];
                            
                            String IC = (String) User_update.getValueAt(User_update.getSelectedRow(), 0);
                            Modify_Record obj1 = new Modify_Record();
                            found = obj1.modify_file_admin(name,tpno,unq,id,ct,app,date,IC,found);
                            User_IC_Display.setText(null);
                        }
                    }
                }
                catch (HeadlessException e) {} catch (IOException ex) {
                    Logger.getLogger(TechnicianInterface2.class.getName()).log(Level.SEVERE, null, ex);
                }
  
            }
        }catch (HeadlessException e) {}

        if (found == 0)
        {
            JOptionPane.showMessageDialog(rootPane, "Record not found.");
        }
        if (found == 1)
        {

            JOptionPane.showMessageDialog(rootPane, "Record Updated Successfully");
        }
    }//GEN-LAST:event_Confirm_Modify_ButtonActionPerformed

    private void Tech_appointment1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tech_appointment1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_Tech_appointment1MouseClicked

    private void User_IC_DisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_User_IC_DisplayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_User_IC_DisplayActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TechnicianInterface2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TechnicianInterface2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TechnicianInterface2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TechnicianInterface2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TechnicianInterface2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Confirm_Modify_Button;
    private javax.swing.JButton Show_Users_Button;
    private javax.swing.JTable Tech_appointment1;
    private javax.swing.JDialog Update_Status;
    private javax.swing.JTextField User_IC_Display;
    private javax.swing.JTable User_update;
    private javax.swing.JDialog View_Tech_Appointments;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables
}
